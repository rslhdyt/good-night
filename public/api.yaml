openapi: 3.0.3
info:
  title: Good Night API
  description: A sleep tracking and social application API that allows users to track their sleep patterns and follow friends' sleep activities.
  version: 1.0.0
  contact:
    name: Good Night Team
servers:
  - url: https://good-night.rslhdyt.dev/api/v1
    description: API v1
paths:
  /me:
    get:
      summary: Get current user profile
      description: Retrieve the authenticated user's profile information
      tags:
        - User Profile
      security:
        - Token: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /me/following_sleeps:
    get:
      summary: Get following users' sleep records
      description: Retrieve sleep records from users that the current user follows, filtered for the previous week, completed sessions only, sorted by duration (descending), limited to 10 records
      tags:
        - Sleep Tracking
      security:
         - Token: []
      responses:
        '200':
          description: Following users' sleep records retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sleep'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /me/sleeps:
    get:
      summary: Get user's sleep records
      description: Retrieve all sleep records for the authenticated user
      tags:
        - Sleep Tracking
      security:
         - Token: []
      responses:
        '200':
          description: Sleep records retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sleep'
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      summary: Start a new sleep session
      description: Create a new sleep record to start tracking sleep. Only one active session is allowed per user.
      tags:
        - Sleep Tracking
      security:
         - Token: []
      responses:
        '201':
          description: Sleep session started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sleep'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          description: Validation error or active session already exists
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ValidationErrors'
                  - type: object
                    properties:
                      error:
                        type: string
                        example: "You already have an active sleep session"

  /me/sleeps/{id}:
    patch:
      summary: End a sleep session
      description: Update a sleep record to end the tracking session. This sets the sleep_end time and calculates the duration.
      tags:
        - Sleep Tracking
      security:
         - Token: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the sleep record to update
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sleep session ended successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sleep'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          description: Validation error or sleep already ended
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ValidationErrors'
                  - type: object
                    properties:
                      error:
                        type: string
                        example: "Sleep already ended"

  /me/follows:
    get:
      summary: Get users I'm following
      description: Retrieve a list of users that the authenticated user is following
      tags:
        - Social Following
      security:
         - Token: []
      responses:
        '200':
          description: Following users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      summary: Follow a user
      description: Start following another user by their user ID
      tags:
        - Social Following
      security:
         - Token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: integer
                  format: int64
                  description: The ID of the user to follow
      responses:
        '201':
          description: User followed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          description: Validation error (e.g., already following, cannot follow self)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrors'

  /me/follows/{id}:
    delete:
      summary: Unfollow a user
      description: Stop following a user by the followed user's ID
      tags:
        - Social Following
      security:
         - Token: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user to unfollow
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: User unfollowed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unfollowed successfully"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /followers/{follower_id}/sleeps:
    get:
      summary: Get sleep records for a specific follower
      description: Retrieve sleep records for a specific follower, filtered for the previous week, completed sessions only, sorted by duration (descending), limited to 10 records. Includes user information.
      tags:
        - Sleep Tracking
      security:
         - Token: []
      parameters:
        - name: follower_id
          in: path
          required: true
          description: The ID of the follower whose sleep records to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Follower's sleep records retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Sleep'
                    - type: object
                      properties:
                        user:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The user's name
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  securitySchemes:
    Token:
      type: apiKey
      in: header
      name: X-User-Id
      description: Provide your user ID as an integer in the X-User-Id header

  schemas:
    User:
      type: object
      required:
        - id
        - name
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the user
          example: 1
        name:
          type: string
          minLength: 3
          maxLength: 255
          description: User's unique name
          example: "john_doe"
        created_at:
          type: string
          format: date-time
          description: When the user was created
          example: "2025-09-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: When the user was last updated
          example: "2025-09-15T10:30:00Z"

    Sleep:
      type: object
      required:
        - id
        - user_id
        - sleep_start
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the sleep record
          example: 1
        user_id:
          type: integer
          format: int64
          description: ID of the user this sleep record belongs to
          example: 1
        sleep_start:
          type: string
          format: date-time
          description: When the sleep session started
          example: "2025-09-15T22:30:00Z"
        sleep_end:
          type: string
          format: date-time
          nullable: true
          description: When the sleep session ended (null for active sessions)
          example: "2025-09-16T06:30:00Z"
        duration:
          type: number
          nullable: true
          description: Duration of sleep in seconds (null for active sessions)
          example: 28800
        created_at:
          type: string
          format: date-time
          description: When the sleep record was created
          example: "2025-09-15T22:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: When the sleep record was last updated
          example: "2025-09-16T06:30:00Z"

    Follow:
      type: object
      required:
        - id
        - follower_id
        - followed_id
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the follow relationship
          example: 1
        follower_id:
          type: integer
          format: int64
          description: ID of the user who is following
          example: 1
        followed_id:
          type: integer
          format: int64
          description: ID of the user being followed
          example: 2
        created_at:
          type: string
          format: date-time
          description: When the follow relationship was created
          example: "2025-09-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: When the follow relationship was last updated
          example: "2025-09-15T10:30:00Z"

    ValidationErrors:
      type: object
      description: Validation error response
      additionalProperties:
        type: array
        items:
          type: string
      example:
        name: ["can't be blank", "is too short (minimum is 3 characters)"]
        followed_id: ["is the same as follower_id"]

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
          example: "Resource not found"

  responses:
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Unauthorized access"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "Resource not found"

    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationErrors'

tags:
  - name: User Profile
    description: Operations related to user profile management
  - name: Sleep Tracking
    description: Operations for tracking sleep sessions and viewing sleep data
  - name: Social Following
    description: Operations for following/unfollowing users and social features
